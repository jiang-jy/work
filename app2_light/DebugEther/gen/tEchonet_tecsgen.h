/*
 * This file was automatically generated by tecsgen.
 * This file is not intended to be edited.
 */
#ifndef tEchonet_TECSGEN_H
#define tEchonet_TECSGEN_H

/*
 * celltype          :  tEchonet
 * global name       :  tEchonet
 * multi-domain      :  no
 * idx_is_id(actual) :  no(no)
 * singleton         :  no
 * has_CB            :  no
 * has_INIB          :  yes
 * rom               :  yes
 * CB initializer    :  yes
 */

/* global header #_IGH_# */
#include "global_tecsgen.h"

/* signature header #_ISH_# */
#include "sLight_tecsgen.h"
#include "sEchonet_tecsgen.h"

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* cell INIB type definition #_CIP_# */
typedef const struct tag_tEchonet_INIB {
    /* call port #_TCP_# */
    /* call port #_NEP_# */ 
    /* attribute(RO) #_ATO_# */ 
    uint8_t        priority;
    uint8_t        stackSize;
}  tEchonet_INIB;

/* CB not exist. CB corresponding to INIB #_DCI_# */
#define tEchonet_CB_tab           tEchonet_INIB_tab
#define tEchonet_CB               tEchonet_INIB
#define tag_tEchonet_CB           tag_tEchonet_INIB

/* singleton cell CB prototype declaration #_MCPB_# */
extern tEchonet_INIB  tEchonet_INIB_tab[];

/* celltype IDX type #_CTIX_# */
typedef const struct tag_tEchonet_INIB *tEchonet_IDX;

/* prototype declaration of entry port function #_EPP_# */
/* sEchonet */
void         tEchonet_eEchonet_initialize(tEchonet_IDX idx);
int          tEchonet_eEchonet_getTimer(tEchonet_IDX idx);
void         tEchonet_eEchonet_progress(tEchonet_IDX idx, int interval);
void         tEchonet_eEchonet_ReciveService(tEchonet_IDX idx, const T_EDATA* esv);
ER           tEchonet_eEchonet_breakWait(tEchonet_IDX idx, const uint8_t* brkdat, int32_t len);
void         tEchonet_eEchonet_timeOut(tEchonet_IDX idx);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

/* to get the definition of CB type of referenced celltype for optimization #_ICT_# */
#ifndef  TOPPERS_CB_TYPE_ONLY
#define  tEchonet_CB_TYPE_ONLY
#define TOPPERS_CB_TYPE_ONLY
#endif  /* TOPPERS_CB_TYPE_ONLY */
#include "tLight_tecsgen.h"
#ifdef  tEchonet_CB_TYPE_ONLY
#undef TOPPERS_CB_TYPE_ONLY
#endif /* tEchonet_CB_TYPE_ONLY */
#ifndef TOPPERS_CB_TYPE_ONLY

#define tEchonet_ID_BASE            (1)  /* ID Base  #_NIDB_# */
#define tEchonet_N_CELL             (1)  /*  number of cells  #_NCEL_# */

/* IDX validation macro #_CVI_# */
#define tEchonet_VALID_IDX(IDX) (1)


/* celll CB macro #_GCB_# */
#define tEchonet_GET_CELLCB(idx) (idx)

/* attr access  #_AAM_# */
#define tEchonet_ATTR_priority( p_that )	((p_that)->priority)
#define tEchonet_ATTR_stackSize( p_that )	((p_that)->stackSize)

#define tEchonet_GET_priority(p_that)	((p_that)->priority)
#define tEchonet_GET_stackSize(p_that)	((p_that)->stackSize)



#ifndef TECSFLOW
 /* call port function macro #_CPM_# */
#define tEchonet_cEchonet_onOffPropertySet( p_that, src, size, anno ) \
	  tLight_eLight_onOffPropertySet( \
	   &tLight_INIB_tab[0], (src), (size), (anno) )
#define tEchonet_cEchonet_OnPropertySet( p_that ) \
	  tLight_eLight_OnPropertySet( \
	   &tLight_INIB_tab[0] )
#define tEchonet_cEchonet_OffPropertySet( p_that ) \
	  tLight_eLight_OffPropertySet( \
	   &tLight_INIB_tab[0] )
#define tEchonet_cEchonet_LightingModePropretSet( p_that ) \
	  tLight_eLight_LightingModePropretSet( \
	   &tLight_INIB_tab[0] )
#define tEchonet_cEchonet_VersionSyslog( p_that ) \
	  tLight_eLight_VersionSyslog( \
	   &tLight_INIB_tab[0] )

#else  /* TECSFLOW */
#define tEchonet_cEchonet_onOffPropertySet( p_that, src, size, anno ) \
	  (p_that)->cEchonet.onOffPropertySet__T( \
 (src), (size), (anno) )
#define tEchonet_cEchonet_OnPropertySet( p_that ) \
	  (p_that)->cEchonet.OnPropertySet__T( \
 )
#define tEchonet_cEchonet_OffPropertySet( p_that ) \
	  (p_that)->cEchonet.OffPropertySet__T( \
 )
#define tEchonet_cEchonet_LightingModePropretSet( p_that ) \
	  (p_that)->cEchonet.LightingModePropretSet__T( \
 )
#define tEchonet_cEchonet_VersionSyslog( p_that ) \
	  (p_that)->cEchonet.VersionSyslog__T( \
 )

#endif /* TECSFLOW */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* prototype declaration of entry port function (referenced when VMT useless optimise enabled) #_EPSP_# */

#ifndef TOPPERS_CB_TYPE_ONLY

#endif /* TOPPERS_CB_TYPE_ONLY */

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

/* IDX validation macro (abbrev.) #_CVIA_# */
#define VALID_IDX(IDX)  tEchonet_VALID_IDX(IDX)


/* cell CB macro (abbrev) #_GCBA_# */
#define GET_CELLCB(idx)  tEchonet_GET_CELLCB(idx)

/* CELLCB type (abbrev) #_CCT_# */
#define CELLCB	tEchonet_CB

/* celltype IDX type (abbrev) #_CTIXA_# */
#define CELLIDX	tEchonet_IDX


/* attr access macro (abbrev) #_AAMA_# */
#define ATTR_priority        tEchonet_ATTR_priority( p_cellcb )
#define ATTR_stackSize       tEchonet_ATTR_stackSize( p_cellcb )


/* call port function macro (abbrev) #_CPMA_# */
#define cEchonet_onOffPropertySet( src, size, anno ) \
          ((void)p_cellcb, tEchonet_cEchonet_onOffPropertySet( p_cellcb, src, size, anno ))
#define cEchonet_OnPropertySet( ) \
          ((void)p_cellcb, tEchonet_cEchonet_OnPropertySet( p_cellcb ))
#define cEchonet_OffPropertySet( ) \
          ((void)p_cellcb, tEchonet_cEchonet_OffPropertySet( p_cellcb ))
#define cEchonet_LightingModePropretSet( ) \
          ((void)p_cellcb, tEchonet_cEchonet_LightingModePropretSet( p_cellcb ))
#define cEchonet_VersionSyslog( ) \
          ((void)p_cellcb, tEchonet_cEchonet_VersionSyslog( p_cellcb ))




/* entry port function macro (abbrev) #_EPM_# */
#define eEchonet_initialize tEchonet_eEchonet_initialize
#define eEchonet_getTimer tEchonet_eEchonet_getTimer
#define eEchonet_progress tEchonet_eEchonet_progress
#define eEchonet_ReciveService tEchonet_eEchonet_ReciveService
#define eEchonet_breakWait tEchonet_eEchonet_breakWait
#define eEchonet_timeOut tEchonet_eEchonet_timeOut

/* iteration code (FOREACH_CELL) #_FEC_# */
#define FOREACH_CELL(i,p_cb)   \
    for( (i) = 0; (i) < tEchonet_N_CELL; (i)++ ){ \
       (p_cb) = &tEchonet_CB_tab[i];

#define END_FOREACH_CELL   }

/* CB initialize macro #_CIM_# */
#define INITIALIZE_CB(p_that)	(void)(p_that);
#define SET_CB_INIB_POINTER(i,p_that)\
	/* empty */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#endif /* TOPPERS_MACRO_ONLY */

#endif /* tEchonet_TECSGENH */
